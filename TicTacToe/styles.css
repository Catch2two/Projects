*, *::after, *::before {
    box-sizing: border-box;
}
/* Creating Variable to use for Markers and Cells */
:root {
    --cell-size: 250px;
    --mark-size: calc(var(--cell-size) * 0.7); /*Use 90% of Cell*/
}
body {
    margin: 0;
    background-color: rgb(76, 76, 85);
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: rgb(123, 123, 129);
    height: 50px;
    font-size: 2rem;
}
.title,
.banner {
    margin: 10%;
}

.gameContainer {
    color: white;
    position: absolute;
}

.scoreBoard {
    display: flex;
    margin: auto;
    width: 800px;
    justify-content: space-between;
    text-align: center;
    font-size: 64px;
    color: white;
}

/* Tic Tac Toe Gameboard */
.gameBoard {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    border: 1px solid white;
    background-color: rgb(32, 32, 32);
    color: white;
    width: 800px;
    height: 800px;
    margin: auto;
}
/* Align, Position, Edit the Contents within the Cells */
.cell {
    position: relative;
    border: 1px solid white;
    width: 200px;
    height: 200px;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

/* Makes Cursor show You Cant Put a Marker There */
.cell.x,
.cell.circle {
    cursor: not-allowed;
}
/* X Marker*/
.cell.x::before,
.cell.x::after,
.gameBoard.x .cell:not(.x):not(.circle):hover::before,
.gameBoard.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .04);
    height: var(--mark-size);
    background-color: rgb(255, 255, 255);
}
/* Makes an X with Shape */
.cell.x::before,
.gameBoard.x .cell:hover::before {
    transform: rotate(45deg);
}
.cell.x::after,
.gameBoard.x .cell:hover::after  {
    transform: rotate(-45deg);
}
/* Adding an O to the Board */
.cell.circle::before,
.cell.circle::after,
.gameBoard.circle .cell:not(.x):not(.circle):hover::before,
.gameBoard.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}
/* Outside Circle Marker */
.cell.circle::before,
.gameBoard.circle .cell:not(.x):not(.circle):hover:before {
    width: var(--mark-size);
    height: var(--mark-size);
    background-color: rgb(255, 255, 255);
}
/* Inside Circle Marker */
.cell.circle::after,
.gameBoard.circle .cell:not(.x):not(.circle):hover:after {
    width: calc(var(--mark-size) * .8);
    height: calc(var(--mark-size) * .8);
    background-color: rgb(32, 32, 32);
}
/* Hover Color */
.gameBoard.x .cell:not(.x):not(.circle):hover::before,
.gameBoard.x .cell:not(.x):not(.circle):hover::after,
.gameBoard.circle .cell:not(.x):not(.circle):hover::before {
  background-color: rgb(129, 129, 129);
}

/* Results Overlay */
#resultsPage {
    display: none;
    position: fixed;
    top: 0;         /* Applies Dark Overlay */
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
    color: white;
    flex-direction: column;
    font-size: 5rem;
}
#restartButton {
    background-color: rgb(255, 255, 255);
    color: rgb(0, 0, 0);
    border: 1px solid transparent;
    width: fit-content;
    font-size: 3rem;
    padding: .2em 1em;
    border-radius: 5%;
    cursor: pointer;
}
#resultsPage button:hover {
    background-color: rgb(0, 0, 0);
    color: white;
}
#resultsPage.show {
    display: flex;
}